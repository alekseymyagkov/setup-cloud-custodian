name: 'Setup Cloud Custodian'
description: 'Set up the latest version of cloud custodian and add the
   CLI to the PATH'
branding:
  icon: play-circle
  color: yellow
inputs:
  custodian-version:
    description: "Install a particular version of cloud custodian"
  include-azure:
    description: "Installs the c7n_azure extension if set to true"
    default: false
  include-gcp:
    description: "Installs the c7n_gcp extension if set to true"
    default: false
  include-c7n-org: 
    description: "Installs the c7n-org extension if set to true"
    default: false

runs:
  using: "composite"
  steps:
  - name: "Install cloud custodian"
    shell: "bash"
    run: |
      python3 -m venv custodian
      source custodian/bin/activate
      VERSION_ARG=""
      if [ "${{ inputs.custodian-version }}" ]; then
        VERSION_ARG="== ${{ inputs.custodian-version }}"
      fi
      pip install --quiet -Iv c7n"${VERSION_ARG}"
      dir=$(pwd)
      mkdir -p ${dir}/bin
      cat << EOF > ${dir}/bin/custodian
      #!/bin/bash
      source ${dir}/custodian/bin/activate
      custodian "\$@"
      EOF
      chmod +x ${dir}/bin/custodian

  - name: "Install azure extension"
    if: ${{ inputs.include-azure }}
    shell: "bash"
    run: |
      source custodian/bin/activate
      pip install --quiet c7n_azure

  - name: "Install gcp extension"
    if: ${{ inputs.include-gcp }}
    shell: "bash"
    run: |
      source custodian/bin/activate
      pip install --quiet c7n_gcp

  - name: "Install c7n-org extension"
    if: ${{ inputs.include-c7n-org }}
    shell: "bash"
    run: |
      source custodian/bin/activate
      pip install --quiet c7n-org
      dir=$(pwd)
      cat << EOF > /usr/local/bin/c7n-org
      #!/bin/bash
      source ${dir}/custodian/bin/activate
      c7n-org "\$@"
      EOF
      chmod +x /usr/local/bin/c7n-org
